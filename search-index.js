var searchIndex = {};
searchIndex["intecture_agent"] = {"doc":"","items":[[3,"Api","intecture_agent","",null,null],[3,"NewApi","","",null,null],[11,"call","","",0,null],[11,"new_service","","",1,{"inputs":[{"name":"self"}],"output":{"name":"result"}}]],"paths":[[3,"Api"],[3,"NewApi"]]};
searchIndex["intecture_api"] = {"doc":"Intecture is an API for managing your servers. You can think of it as a  DevOps tool, but without the complicated ecosystem and proprietary nonsense.","items":[[0,"command","intecture_api","Endpoint for running shell commands.",null,null],[3,"Command","intecture_api::command","Represents a shell command to be executed on a host.",null,null],[3,"CommandStatus","","Represents the status of a running `Command`, including the output stream and exit status.",null,null],[3,"CommandResult","","Represents the exit status of a `Command` as a `Result`-like `Future`. If the command succeeded, the command output is returned. If it failed, an error containing the command's output is returned.",null,null],[3,"ExitStatus","","The status of a finished command.",null,null],[12,"success","","Was termination successful? Signal termination is not considered a success, and success is defined as a zero exit status.",0,null],[12,"code","","Returns the exit code of the process, if any.",0,null],[4,"Provider","","Specific implementation of `Command`",null,null],[13,"Generic","","",1,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"provider"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `Command` with the default `Provider`.",2,{"inputs":[{"name":"h"},{"name":"str"},{"name":"option"}],"output":{"name":"command"}}],[11,"with_provider","","Create a new `Command` with the specified `Provider`.",2,{"inputs":[{"name":"h"},{"name":"provider"},{"name":"str"},{"name":"option"}],"output":{"name":"command"}}],[11,"exec","","Execute the command.",2,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"take_stream","","Take ownership of the output stream.",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"result","","Convert this to a `CommandResult`, which returns the output string on success and an error containing the command's output on failure. If the stream has already been taken by `take_stream()` then this function will return `None`.",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"poll","","",3,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",4,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[0,"errors","intecture_api","The API error type.",null,null],[3,"Error","intecture_api::errors","The Error type.",null,null],[12,"0","","The kind of the error.",5,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Msg","","A convenient variant for String.",6,null],[13,"Io","","",6,null],[13,"Regex","","",6,null],[13,"Command","","",6,null],[13,"InvalidTelemetryKey","","",6,null],[12,"cmd","intecture_api::errors::ErrorKind","",6,null],[12,"key","","",6,null],[13,"ProviderUnavailable","intecture_api::errors","",6,null],[13,"Request","","",6,null],[12,"endpoint","intecture_api::errors::ErrorKind","",6,null],[12,"func","","",6,null],[13,"Remote","intecture_api::errors","",6,null],[13,"SystemCommand","","",6,null],[13,"SystemCommandOutput","","",6,null],[13,"SystemFile","","",6,null],[13,"SystemFileOutput","","",6,null],[6,"Result","","Convenient wrapper around `std::Result`.",null,null],[6,"SFuture","","",null,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with this crate.",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the closure, which returns some type that can be converted to `ErrorKind`, boxes the original error to store as the cause, then returns a new error containing the original error.",7,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[8,"FutureChainErr","","",null,null],[10,"chain_err","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"sfuture"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",5,{"inputs":[{"name":"errorkind"},{"name":"state"}],"output":{"name":"error"}}],[11,"from_kind","","",5,null],[11,"with_chain","","",5,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"self"}}],[11,"kind","","",5,null],[11,"iter","","",5,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"chain_err","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"backtrace","","",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"extract_backtrace","","",5,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",5,{"inputs":[{"name":"errorkind"}],"output":{"name":"error"}}],[11,"with_chain","","Constructs a chained error from another error and a kind, and generates a backtrace.",5,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"error"}}],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a kind, and generates a backtrace",5,{"inputs":[{"name":"box"},{"name":"k"}],"output":{"name":"error"}}],[11,"kind","","Returns the kind of the error.",5,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"iter","","Iterates over the error chain.",5,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"backtrace","","Returns the backtrace associated with this error.",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"chain_err","","Extends the error chain with a new entry.",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"error"}}],[11,"description","","",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",5,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"errorkind"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"deref","","",5,null],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","A string describing the error kind.",6,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",6,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[0,"host","intecture_api","Manages the connection between the API and a server.",null,null],[0,"local","intecture_api::host","A connection to the local machine.",null,null],[3,"Local","intecture_api::host::local","A `Host` type that talks directly to the local machine.",null,null],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"local"}}],[11,"new","","Create a new `Host` targeting the local machine.",9,{"inputs":[{"name":"handle"}],"output":{"name":"box"}}],[11,"telemetry","","",9,{"inputs":[{"name":"self"}],"output":{"name":"telemetry"}}],[11,"handle","","",9,{"inputs":[{"name":"self"}],"output":{"name":"handle"}}],[0,"remote","intecture_api::host","A connection to a remote host.",null,null],[3,"Plain","intecture_api::host::remote","A `Host` type that uses an unencrypted socket.",null,null],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"plain"}}],[11,"connect","","Create a new Host connected to the given address.",10,{"inputs":[{"name":"str"},{"name":"handle"}],"output":{"name":"box"}}],[11,"telemetry","","",10,{"inputs":[{"name":"self"}],"output":{"name":"telemetry"}}],[11,"handle","","",10,{"inputs":[{"name":"self"}],"output":{"name":"handle"}}],[11,"call","","",10,null],[8,"Host","intecture_api::host","Trait for local and remote host types.",null,null],[10,"telemetry","","Get `Telemetry` for this host.",11,{"inputs":[{"name":"self"}],"output":{"name":"telemetry"}}],[10,"handle","","Get `Handle` to Tokio reactor.",11,{"inputs":[{"name":"self"}],"output":{"name":"handle"}}],[0,"prelude","intecture_api","The API prelude.",null,null],[0,"package","","Endpoint for managing packages.",null,null],[3,"Package","intecture_api::package","Represents a system package to be managed for a host.",null,null],[4,"Provider","","Specific implementation of `Package`",null,null],[13,"Apt","","",12,null],[13,"Dnf","","",12,null],[13,"Homebrew","","",12,null],[13,"Nix","","",12,null],[13,"Pkg","","",12,null],[13,"Yum","","",12,null],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"provider"}}],[11,"new","","Create a new `Package` with the default `Provider`.",13,{"inputs":[{"name":"h"},{"name":"str"}],"output":{"name":"package"}}],[11,"with_provider","","Create a new `Package` with the specified `Provider`.",13,{"inputs":[{"name":"h"},{"name":"provider"},{"name":"str"}],"output":{"name":"package"}}],[11,"installed","","Check if the package is installed.",13,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"install","","Install the package.",13,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"uninstall","","Uninstall the package.",13,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[0,"service","intecture_api","Endpoint for managing system services.",null,null],[3,"Service","intecture_api::service","Represents a system service to be managed for a host.",null,null],[4,"Provider","","Specific implementation of `Service`",null,null],[13,"Debian","","",14,null],[13,"Homebrew","","",14,null],[13,"Launchctl","","",14,null],[13,"Rc","","",14,null],[13,"Redhat","","",14,null],[13,"Systemd","","",14,null],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"provider"}}],[11,"new","","Create a new `Service` with the default `Provider`.",15,{"inputs":[{"name":"h"},{"name":"str"}],"output":{"name":"service"}}],[11,"with_provider","","Create a new `Service` with the specified `Provider`.",15,{"inputs":[{"name":"h"},{"name":"provider"},{"name":"str"}],"output":{"name":"service"}}],[11,"running","","Check if the service is currently running.",15,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"action","","Perform an action for the service, e.g. \"start\".",15,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"box"}}],[11,"enabled","","Check if the service will start at boot.",15,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"enable","","Instruct the service to start at boot.",15,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"disable","","Prevent the service from starting at boot.",15,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[0,"telemetry","intecture_api","System generated data about your host.",null,null],[3,"Telemetry","intecture_api::telemetry","Top level structure that contains static information about a `Host`.",null,null],[12,"cpu","","Information on the CPU",16,null],[12,"fs","","Information on the filesystem",16,null],[12,"hostname","","Host's FQDN",16,null],[12,"memory","","Amount of RAM, in bytes",16,null],[12,"net","","Information on network interfaces",16,null],[12,"os","","Information about the operating system",16,null],[12,"user","","Information on the current user",16,null],[3,"Cpu","","Information about the `Host`s CPU.",null,null],[12,"vendor","","Processor vendor, e.g. \"GenuineIntel\"",17,null],[12,"brand_string","","Full description of the processor",17,null],[12,"cores","","Number of cores in the processor",17,null],[3,"FsMount","","Information about a specific filesystem mount.",null,null],[12,"filesystem","","The device path, e.g. /dev/sd0s1",18,null],[12,"mountpoint","","Path to where the device is mounted, e.g. /boot",18,null],[12,"size","","Capacity of device in Kb",18,null],[12,"used","","Amount used in Kb",18,null],[12,"available","","Remaining capacity available in Kb",18,null],[12,"capacity","","Percentage used as a decimal",18,null],[3,"Os","","Information about the `Host`s OS.",null,null],[12,"arch","","OS architecture, e.g. \"x86_64\"",19,null],[12,"family","","OS family",19,null],[12,"platform","","OS name",19,null],[12,"version_str","","Full version string, e.g. \"10.13\"",19,null],[12,"version_maj","","Major version number, e.g. \"10\"",19,null],[12,"version_min","","Minor version number, e.g. \"13\"",19,null],[12,"version_patch","","Patch version number, e.g. \"0\"",19,null],[3,"User","","Information on the current user",null,null],[12,"user","","",20,null],[12,"uid","","",20,null],[12,"group","","",20,null],[12,"gid","","",20,null],[12,"home_dir","","",20,null],[4,"OsFamily","","Operating system family",null,null],[13,"Bsd","","",21,null],[13,"Darwin","","",21,null],[13,"Linux","","",21,null],[4,"OsPlatform","","Operating system name",null,null],[13,"Centos","","",22,null],[13,"Debian","","",22,null],[13,"Fedora","","",22,null],[13,"Freebsd","","",22,null],[13,"Macos","","",22,null],[13,"Nixos","","",22,null],[13,"Ubuntu","","",22,null],[4,"LinuxDistro","","Linux distribution name",null,null],[13,"Debian","","",23,null],[13,"RHEL","","",23,null],[13,"Standalone","","",23,null],[11,"from","","",16,{"inputs":[{"name":"telemetry"}],"output":{"name":"telemetry"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"osfamily"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"self"},{"name":"osfamily"}],"output":{"name":"bool"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"osplatform"}],"output":{"name":"bool"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"linuxdistro"}],"output":{"name":"bool"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"load","","",16,{"inputs":[{"name":"h"}],"output":{"name":"box"}}],[11,"is_root","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}]],"paths":[[3,"ExitStatus"],[4,"Provider"],[3,"Command"],[3,"CommandStatus"],[3,"CommandResult"],[3,"Error"],[4,"ErrorKind"],[8,"ResultExt"],[8,"FutureChainErr"],[3,"Local"],[3,"Plain"],[8,"Host"],[4,"Provider"],[3,"Package"],[4,"Provider"],[3,"Service"],[3,"Telemetry"],[3,"Cpu"],[3,"FsMount"],[3,"Os"],[3,"User"],[4,"OsFamily"],[4,"OsPlatform"],[4,"LinuxDistro"]]};
searchIndex["intecture_bindings"] = {"doc":"","items":[],"paths":[]};
searchIndex["intecture_proj"] = {"doc":"","items":[[0,"prelude","intecture_proj","",null,null]],"paths":[]};
initSearch(searchIndex);
